
import {FC} from 'react'
import {Paragraph, Highlight} from '@/components/Typography'
import {ColorSchemes} from '@/components/SwitchColorScheme'
import {useColorScheme} from '@/components/Hooks'

type DescComponent<T> = FC<T> & {shortDesc?: string}

const code1 = `// store.ts
import {create} from 'zustand'

interface FilesStore {
  initialized: boolean
  fileList: any[]
  setInitialized: (value: boolean) => void
  setFileList: (list: any[]) => void
}
export const useFilesStore = create<FilesStore>()(set => ({
  initialized: false,
  fileList: [],
  setInitialized: value => set(state => ({initialized: value})),
  setFileList: list => set(state => ({fileList: list}))
}))`

const code2 = `// main.tsx
import React from 'react'
import {useFilesStore} from './store'

const ChildComponent: React.FC = () => {
  console.log('ChildComponent')
  const initialized = useFilesStore(state => state.initialized)
  const fileList = useFilesStore(state => state.fileList)
  return <div>{'initialized: ' + initialized}</div>
}

const Component: React.FC = () => {
  console.log('Component')
  const initialized = useFilesStore(state => state.initialized)
  const fileList = useFilesStore(state => state.fileList)
  const setInitialized = useFilesStore(state => state.setInitialized)
  const setFileList = useFilesStore(state => state.setFileList)

  React.useEffect(() => {
    if (!initialized) {
      setInitialized(true)
      setFileList([])
    }
  }, [])

  return <div>
    {'initialized: ' + initialized}
    <ChildComponent />
  </div>
}`

const output = `Component
ChildComponent
Component
ChildComponent`

const Component: DescComponent<{}> = () => {
  const colorScheme = useColorScheme()
  const opts = {...colorScheme, language: colorScheme?.theme !== ColorSchemes.Text ? 'typescript' : undefined, showLineNumbers: false}
  return <>
    <Paragraph>üêª Bear necessities for state management in React!</Paragraph>
    <Paragraph>C 2023 –≥–æ–¥–∞ <a href='https://github.com/pmndrs/zustand' target='_blank'>zustand</a> –¥–æ–≤–æ–ª—å–Ω–æ —Ç—Ä–µ–Ω–¥–æ–≤–∞—è state-management –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–∞—Ä–∞–≤–Ω–µ —Å <a href='https://github.com/reduxjs/redux-toolkit' target='_blank'>Redux Toolkit</a> –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ React.</Paragraph>
    <Paragraph>–í–æ—Ç –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. –ß—Ç–æ –±—É–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏ –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ Component?</Paragraph>
    <Highlight {...opts}>{code1}</Highlight>
    <Highlight {...opts}>{code2}</Highlight>
    <Paragraph>–¢–µ—Å—Ç–∏–º:</Paragraph>
    <iframe width="639" height="360" src="https://www.youtube.com/embed/_suNPuzx_eg" title="React + zustand state-management lib. Rendering optimization example" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowFullScreen></iframe>
    <Paragraph>
      <pre>{output}</pre>
    </Paragraph>
    <Paragraph>–∫–∞–∫ –º–æ–∂–Ω–æ –≤–∏–¥–µ—Ç—å zustand —Å—Ç–∞—Ä–∞–µ—Ç—Å—è –Ω–µ –¥–µ–ª–∞—Ç—å –ª–∏—à–Ω–∏—Ö —Ä–µ–Ω–¥–µ—Ä–æ–≤ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω–æ–≤</Paragraph>
    <Paragraph>+–Ω–µ –Ω—É–∂–Ω–æ –æ–±–æ—Ä–∞—á–∏–≤–∞—Ç—å –≤ Context Provider</Paragraph>
    <Paragraph>+–Ω–µ—Ç boilderplate-–∫–æ–¥–∞</Paragraph>
  </>
}
Component.shortDesc = '–ß—Ç–æ –±—É–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏?'

export default Component
